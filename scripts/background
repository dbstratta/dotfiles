#!/usr/bin/env python3

"""
Bing's Wallpaper of the Day Background Setter.

Usage:
======
"""

import subprocess
import os
import shutil
import requests

class Background(object):
    """
    The Background class.
    """

    BING_API_URL = 'https://www.bing.com'
    BG_ENDPOINT = '{}/HPImageArchive.aspx?format=js&idx=0&n=1&mkt=en-US'.format(
        BING_API_URL)

    LOCAL_BACKGROUND_FOLDER_PATH = '{}/.bing_wallpaper/'.format(
        os.path.expanduser('~'))

    def __init__(self):
        self.path = None
        self.content = None
        self.fetch_background_data()

    @classmethod
    def remove_local_background_folder(cls):
        """Removes the local background folder with everything in it."""
        shutil.rmtree(cls.LOCAL_BACKGROUND_FOLDER_PATH)

    def fetch_background_data(self):
        response = requests.get(self.BG_ENDPOINT).json()

        url_pathname = response['images'][0]['url']
        self.url = self.BING_API_URL + url_pathname
        self.name = self.url.split('/')[-1]
        self.path = self.LOCAL_BACKGROUND_FOLDER_PATH + self.name

    def fetch_background(self):
        """Fetches and sets the background's content."""
        self.content = requests.get(self.url).content

    def save_background(self, content, path, filename):
        """Saves the background."""
        with open(self.path, 'wb') as file:
            file.write(self.content)

    def set_background(self, program):
        if program == 'feh':
            command = 'feh --bg-scale {}{}'.format(
                local_images_dir,
                image_filename)
        elif program == 'gsettings':
            command = 'gsettings'

        subprocess.call(command, shell=True)
        print('Success!\n')

    def __str__(self):
        return self.name


def main():
    """The script's main function."""

    program = 'feh'
    new_background = Background()

    new_background.fetch_background()

    try:
        Background.remove_local_background_folder()
    except FileNotFoundError:
        print('Bing wallpaper folder didn\'t exist.\n')
    finally:
        os.mkdir(Background.LOCAL_BACKGROUND_FOLDER_PATH)

    new_background.save_background()
    new_background.set_background(program)


if __name__ == '__main__':
    main()
